package be.kzen.ergorr.interfaces.soap;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * 
 * A CSW implementation. Includes alternative SOAP bindings
 * for the CSW interfaces.
 *         
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.4-hudson-208-
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "CswService", targetNamespace = "http://www.kzen.be/ergorr/interfaces/soap", wsdlLocation = "file:/home/yaman/workspace/projects/ESA/trunk/source/ErgoRR/web/WEB-INF/wsdl/CSW-service.wsdl")
public class CswClientService
        extends Service
{

    private final static URL CSWSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(be.kzen.ergorr.interfaces.soap.CswClientService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = be.kzen.ergorr.interfaces.soap.CswClientService.class.getResource(".");
            url = new URL(baseUrl, "file:/home/yaman/workspace/projects/ESA/trunk/source/ErgoRR/web/WEB-INF/wsdl/CSW-service.wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'file:/home/yaman/workspace/projects/ESA/trunk/source/ErgoRR/web/WEB-INF/wsdl/CSW-service.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        CSWSERVICE_WSDL_LOCATION = url;
    }

    public CswClientService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CswClientService() {
        super(CSWSERVICE_WSDL_LOCATION, new QName("http://www.kzen.be/ergorr/interfaces/soap", "CswService"));
    }

    /**
     * 
     * @return
     *     returns CswPortType
     */
    @WebEndpoint(name = "CswPort")
    public CswClientPortType getCswPort() {
        return super.getPort(new QName("http://www.kzen.be/ergorr/interfaces/soap", "CswPort"), CswClientPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CswPortType
     */
    @WebEndpoint(name = "CswPort")
    public CswClientPortType getCswPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.kzen.be/ergorr/interfaces/soap", "CswPort"), CswClientPortType.class, features);
    }
}
