#labels installation
==Requirements==

  * JDK 1.6
  * Glassfish 2.2 or Tomcat 5.5.x
  * Postgres 8.2+
  * Postgis 1.3+

I would recommend installing the JDK and Glassfish or Tomcat manually.
If you are running Ubuntu 8.04 then these versions of Postgres and Postgis are very easy to install. 
{{{
sudo apt-get install postgres postgis
}}}


==Installation==

*1. Make sure that the required software is installed properly*

*2. Checkout the source from google code and put it all under one directory.*

The netbeans projects are:

  *ErgoRR-client < client API through SOAP interface

  *ErgoRR-backend-client < client API connecting directly to backend

  *ErgoRR-commons < common classes

  *ErgoRR-jaxb < JAXB bindings

  *ErgoRR-persistence < persistence layer

  *ErgoRR-web-war < web application

  *There is another folder "ErgoRR-shared": these are just libraries.


*3. Create database and add spatial functionality*
  * In Postgres, create the database with the name "ergorr".
  * Change to the postgres user with the command: 
{{{
sudo su postgres
}}}
  * Enable plpqsql on the newly created database with the command:
{{{
createlang plpgsql ergorr
}}}
  * Run the postgis scripts on database "ergorr" to enable spatial functionality.
{{{
psql -d ergorr -f /usr/share/postgresql-8.3-postgis/lwpostgis.sql
psql -d ergorr -f /usr/share/postgresql-8.3-postgis/spatial_ref_sys.sql
}}}
  * Run the database script (ergo_source_dir)/ErgoRR-persistence/conf/database.sql

== Glassfish specific ==

*4. Copy files to Glassfish*
  * Make sure that you have the variable AS_HOME set.
  * From (ergo_source_dir)/ErgoRR-web-war directory run the command
{{{
ant glassfish-install
}}}


*5. Configure Database *
  * Edit the file (ergo_source_dir)/ErgoRR-web-war/setup/sun-resources.xml to match your postgres setup.


*6. Add Glassfish to Netbeans* 
  * This can be done from the top menu _Tools_ > _Servers_.
  * Now you can set the project to run on your Glassfish installation.
    * Right click on the project _ErgoRR-web-war_ to select _Properties_.
    * In the properties window select _Run_ from the left menu and select the server you have just configured in the _Server_ property field.

*7. Deploy*

  * Right click on the project _ErgoRR-web-war_, choose "Undeploy and Deploy".

== Tomcat specific ==

*4. Install files to Tomcat*
  * Make sure that you have the variable CATALINA_HOME set.
  * From (ergo_source_dir)/ErgoRR-web-war directory run the command
{{{
ant tomcat-install
}}}

This will copy the following files:

(ergo_source_dir)/ErgoRR-shared/postgreSQL/postgresql-8.3-603.jdbc3.jar to CATALINA_HOME/common/lib

(ergo_source_dir)/ErgoRR-shared/metro1_2/webservices-api.jar to CATALINA_HOME/common/endorsed

(ergo_source_dir)/ErgoRR-web-war/conf/ErgoRR-web-war.xml to CATALINA_HOME/conf/Catalina/localhost

*5. Configure Database *

Edit the file CATALINA_HOME/conf/Catalina/localhost/ErgoRR-web-war.xml to match to your postgres setup.

Note: If you edit the name of the deployment file ErgoRR-web-war.war then you have to set the same name for the ErgoRR-web-war.xml.

*6. Configure packaged libraries *

Glassfish comes with the require the Metro (webservice) libraries, so it doesn't require it to be packaged with the .war file.

To package this libraries for tomcat:

  * Right click on the _ErgoRR-web-war_ project and select _Properties_
  * From the left menu select _Libraries_
  * From the list of libraries select the checkbox from the _Package_ column for the following libraries:
    * webservice-extra-api.jar
    * webservice-extra.jar
    * webservice-rt.jar
    * Note: DO NOT select webservice-api.jar

*6. Deploy *

  * Build the ErgoRR-web-war project and copy the dist/ErgoRR-web-war.war to Tomcat webapp directory.